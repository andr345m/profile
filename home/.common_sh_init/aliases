#!/bin/sh
# NOTE: The contents of this file may assume that the shell is connected to a
# tty (unlike 'env') but shouldn't produce output. (use 'misc' for that)

# Set up some defaults I like
alias colordiff="colordiff -u"
alias ls="ls --color=auto"
alias dirs="dirs -v"
alias less="less -R"
alias vids="egrep '\.(flv|mp4|webm|avi|ogv|ogm|mkv|mov|rm|wmv)'"
alias clippy="cargo +nightly clippy"

# A helper that makes an alias which is conditional on the lack of arguments.
cond_alias() { eval "function ${1}() { [ -z \"\$*\" ] && $2 || command $1 \"\$@\"; }"; }

# TODO: Rework things to remove this duplication
cond_alias_2() { eval "function ${1}() { [ -z \"\$*\" ] && $2 $3 $4 || command $2 \"\$@\" $4; }"; }

# If github's "hub" wrapper is installed, hook it up
if which hub >/dev/null 2>&1; then
    alias git=hub
fi

# Wrap sqliteman to prevent it from leaving crud lying around
if which sqliteman >/dev/null 2>&1; then
    sqliteman() {
        command sqliteman "$@"
        rm -- -version
    }
fi

# Streamline my TYT-watching workflow
cond_alias_2 tytp "bed --no-log" "*"

# Given an egrep path filter, use git filter-branch to throw out all files
# which don't match.
git-filter-whitelist() {
    # Filter out content and newly emptied non-merge, non-root commits
    # Source: http://stackoverflow.com/a/6006679
    #shellcheck disable=SC1004,SC2016
    command git filter-branch --prune-empty --index-filter '
	    git ls-tree -zr --name-only --full-tree $GIT_COMMIT \
	    | egrep -vz "'"$1"'" \
	    | xargs -0 git rm --cached -r
	' -- --all

    # Collapse away vestigial merge and root commits ignored by --prune-empty
    # Source: My own accidental discovery
    command git rebase --root HEAD
}

# For when I mistype popd
oiod() { echo "ERROR: Your right hand is misaligned"; }

# Nicer alternative to piping a gunzipped file into lynx
wo() {
    TMPFILE=$(mktemp --suffix=.html)
    gunzip < "$@" > "$TMPFILE"
    "$BROWSER" "$TMPFILE"
    (sleep 5; rm "$TMPFILE") &
}

# Alias for more comfortable gog downloader argv syntax
gogd() {
    local IFS=\|
    lgogdownloader --download --game "^($*)\$"
}
gogu() {
    local IFS=\|
    lgogdownloader --download --no-cover --no-extras --game "^($*)\$"
}

lgogd() {
    local IFS=\|
    lgogdownloader --download --platform=4 --game "^($*)\$"
}
lgogu() {
    local IFS=\|
    lgogdownloader --download --no-cover --no-extras --platform=4 --game "^($*)\$"
}

# Alias for my preferred approach to using youtube-dl
ytdl() {
    youtube-dl --prefer-free-formats "$@"
}

# Alias for my preferred settings for saving Young Turks vids
yt() {
    youtube-dl -f 44/35/43/18/34 "$@"
}

# Alias for grabbing The Cinema Snob and Brad Tries episodes
getsnob() {
    local TARGET="$1"
    shift
    mkdir -p "$TARGET"
    pushd "$TARGET"
    for X in "$@"; do
        # Grab the SD file for eventual fservroot use
        youtube-dl -f 43 "$X"
    done
    for X in "$@"; do
        # Grab the HD file for archival
        youtube-dl "$X"
    done
    popd
}
tcs() { getsnob ~"/incoming/Videos/The Cinema Snob" "$@"; }
bradtries() { getsnob ~"/incoming/Videos/Brad Tries" "$@"; }

# Smart wrapper for multiple site-specific download tools
dl() {
    for url in "$@"; do
        case $url in
            http://youtube.com/watch\?* | http://www.youtube.com/watch\?* | https://youtube.com/watch\?* | https://www.youtube.com/watch\?* | https://youtu.be/* ) ytdl "$url" ;;
            http://vimeo.com/* | https://vimeo.com/* | http://blip.tv/* ) ytdl "$url" ;;
            http://soundcloud.com/ | https://soundcloud.com/* ) ytdl "$url" ;;
            http://*.tumblr.com/* | https://*.tumblr.com/* ) youtube-dl "$url" ;;
            http://fanfiction.net/s/* | http://www.fanfiction.net/s/* | https://fanfiction.net/s/* | https://www.fanfiction.net/s/* ) download_ffn_fic "$url" ;;
            http://www.tthfanfic.org/Story-* | http://ficwad.com/story/* | http://www.ficwad.com/story/* ) download_ffn_fic "$url" ;;
            * ) echo "Unrecognized URL type: $url" ;;
        esac
    done
}

# Shorthand aliases for TaskWarrior
t() {
    if [ -z "$*" ]; then
        clear; task
    else
        task "$@"
    fi
}
alias tpending='task add +pending due:30d'

# Colorized wdiff
cwdiff() {
    if which dwdiff >/dev/null 2>&1; then
        dwdiff -R "$@" | command colordiff
    else
        wdiff -n "$@" | command colordiff
    fi
}

# Stuff for KIO LAN transfers
andre() { kioclient copy "$@" "smb://Slick.multiverse/inbound/"; }
mom()   { kioclient copy "$@" "smb://mom/inbound/"; }
nicky() { kioclient copy "$@" "smb://darkspark/inbound/"; }

#Command remaps for extra convenience
alias bd="cd -"	# Cycle between the two most recent directories
cond_alias df pydf
cond_alias date "date --rfc-3339=seconds"
cond_alias top htop
cond_alias units "units -v"

# Quick shortcut to open a file browser in the current directory without
# cluttering up the terminal with messages from it.
alias here="pcmanfm . &>/dev/null &"

# I want my damn Vim to open things in tabs
alias vim="vim -p"
alias gvim="gvim -p &>/dev/null"

# Make documentation browsing easier
alias info="pinfo"
kinfo() { konqueror info:/"$@" & }
kman()  { konqueror man:"$@" & }

# Get rid of the annoying "nohup.out" files.
# (Why couldn't they have a --logoutput option and no-logging default instead?)
nohup() { command nohup "$@" > /dev/null & }

# Miscellaneous quick features
mp3ck()   { mpck -B "$@"; mp3check -e3STBEG "$@"; }
pngcomp() {
    optipng "$@";
    advpng -z4 "$@";
    for X in "$@"; do
        mv "$X" "$X".bak &&
        pngcrush -rem gAMA -rem alla -rem cHRM -rem iCCP -rem sRGB -rem time "$X".bak "$X" | egrep -v '^[ \|]\|' &&
        rm "$X".bak
    done
}
pngcomp_brute() {
    optipng -zc1-9 -zm1-9 -zs0-3 -f0-5 "$@" | egrep '(\*\* Processing|% decrease|is already optimized)';
    advpng -z4 "$@";
    advpng -z3 "$@" | fgrep -v '100%';
    advpng -z2 "$@" | fgrep -v '100%';
    advpng -z1 "$@" | fgrep -v '100%';
    for X in "$@"; do
        mv "$X" "$X".bak &&
        pngcrush -brute -rem gAMA -rem alla -rem cHRM -rem iCCP -rem sRGB -rem time "$X".bak "$X" | egrep '(Best pngcrush method|no filesize change|% filesize reduction)' &&
        rm "$X".bak
    done
}

# An accompaniment to dos2unix and unix2dos
alias mac2unix="tr '\r' '\n' "
alias unix2mac="tr '\n' '\r' "

# Since I habitually use "ls" to drill down until I hit a file, let's make an
# alias that uses ls if given a directory and vim's less.sh macro for files.
l() {
	if [ -f "$1" -a "$*" = "$1" ]; then
		/usr/share/vim/vim72/macros/less.sh "$1"
	else
		ls "$@"
	fi
}

# Make Midnight Commander exit into the current directory if installed.
if [ -e "/usr/libexec/mc/mc-wrapper.sh" ]; then
    alias mc=". /usr/libexec/mc/mc-wrapper.sh -x"
elif [ -e "/usr/share/mc/bin/mc-wrapper.sh" ]; then
    alias mc=". /usr/share/mc/bin/mc-wrapper.sh -x"
else
    alias mc="mc -x"
fi

# Set up an OSD alias which will just work to the best of its ability.
if which aosd_cat >/dev/null 2>&1; then
	alias osd="aosd_cat --font='Bitstream Vera Sans Bold 36' --fade-in=300 --fade-out=300"
else
	alias osd="osd_cat --font '-*-*-*-r-*-*-*-390-*-*-*-*-*-*' -p bottom -A left -o -75 -i 50 -c green"
fi

# Work around smartypants Debian packagers
if which ack-grep > /dev/null 2>&1; then
    alias ack=ack-grep
fi

if ! which download_ffn_fic >/dev/null 2>&1 && [ -e ~/src/fanfic2ebook ]; then
    download_ffn_fic() { PYTHONPATH=~/src/fanfic2ebook/src/ python -m fanfic2ebook -P fanfic2html "$@"; }
fi

# Set up rTorrent to interact more nicely with screen's window list
if [[ "$TERM" == screen* ]]; then
	#shellcheck disable=SC2032,SC2033
	title() { screen -X title "$@" && echo -ne "\033_$@\033\\"; }
	alias rtorrent="title rTorrent && exec rtorrent"
fi
